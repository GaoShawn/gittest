程序分析是指通过对程序进行自动分析,来检验、确认或发现程序的性质。将程序分析的方法应用于软件安全性测试,可有效发现和检测软件中存在的安全缺陷或漏洞。程序分析可以分为动态分析和静态分析两种。其中，动态分析要通过具体的运行来对软件进行安全性测试，静态分析则不需要运行待测程序，而是从语法和语义层面进行分析。
1, 模糊测试是向系统中输入不规则的数据来测试系统是否发生崩溃，又被成为随机测试。这是一种黑盒测试技术，主要采用的测试工具包括FileFuzz, SPIKEfile, Peach等等。
2, 符号执行的主要思想是将输入和输出使用符号来代替具体的数值，主要工具包括EFFIGY， SELECT，DISSECT，KLEE，EXE，PREfix，IntScope等，其中Klee取得了较好的效果。
3, 自动化白盒模糊测试方法是将模糊测试和符号执行结合起来，通过符号执行收集路径约束，并通过对部分约束的反转产生新的测试集。目前的白盒测试工具包含CUTE，SMART和SAGE等，不过这些工具都是闭源的。其中微软开发的SAGE取得了较好的效果。不过也有开源的工具，Catchconv和Fuzzgrind，两者均为轻量级的白盒测试工具。
虽然相对于模糊和符号执行，白盒有着很多的优点。不过，白盒测试也存在符号求解约束，路径爆炸,系统环境交互等诸多的问题。在测试过程中，约束求解器等工具的求解过程会占用大量的时间。为了解决这些问题，一般只探测待测程序的部分执行路径，或者并行花测试过程，从而提升访问速度。对于系统环境交互问题，在大规模的软件中，程序内变量仅仅是软件的一部分，软件功能的实现还要依靠外部环境，如操作系统，外部文件，以及用户交互操作来完成。在软件运行时，外部环境各有不同，如操作系统环境不同，用户操作顺序不同等，在软件测试中要完备的模拟所有的这些情况是不可能做到的任务。



